# streamlit_app.py

import streamlit as st
import random

# --- 1. 앱의 기본 구조 및 데이터 설정 ---

if 'result' not in st.session_state:
    st.session_state['result'] = None

# 메뉴 데이터: [추천 이유, (이유와 효과가 포함된) 음식 설명, 이미지 URL] 형식으로 수정
menus = {
    '떡볶이': [
        "스트레스 확 풀리는 매콤함이 필요할 때!",
        "매콤달콤한 고추장 소스에 쫄깃한 떡과 어묵을 넣고 끓여낸 대한민국의 대표 간식입니다. 매운맛의 핵심인 캡사이신 성분은 뇌를 자극해 엔도르핀 분비를 촉진합니다. 이 덕분에 일시적으로 스트레스가 풀리고 기분이 전환되는 효과를 얻을 수 있습니다.",
        {"image_path": "images/tteokbokki.jpg"}
    ],
    '김치찌개': [
        "따끈한 국물과 함께 든든한 한 끼 식사가 필요할 때!",
        "잘 익은 김치와 돼지고기를 넣고 얼큰하게 끓여낸 한국인의 소울푸드입니다. 따끈하고 얼큰한 국물은 몸의 긴장을 풀어주고 혈액순환을 도와 몸에 온기를 더해줍니다. 또한, 풍부한 건더기와 함께 밥을 먹으면 포만감이 오래 지속되어 지친 몸에 든든한 에너지를 채워주는 효과가 있습니다.",
        {"image_path": "images/kimchisoup.jpg"}
    ],
    '된장찌개': [
        "구수한 국물로 속을 편안하게 채우고 싶을 때!",
        "한국의 전통 장인 된장을 풀어 구수하고 깊은 맛을 낸 찌개입니다. 된장은 발효 식품으로 소화에 도움을 주어 속을 편안하게 만들어주는 효과가 있습니다. 부드러운 두부와 각종 채소가 들어있어 자극적이지 않게 영양을 보충하고 안정감을 찾고 싶을 때 최고의 선택입니다.",
       {"image_path": "images/soybeanpastesoup.jpg"}
    ],
    '파전': [
        "비 오는 날, 궂은 날씨에 감성을 더하고 싶을 때!",
        "쪽파와 해물을 듬뿍 넣고 바삭하게 부쳐낸 한국식 전입니다. 비 오는 소리와 파전 부치는 소리가 비슷하게 들려 청각적인 안정감을 주며, 밀가루와 기름의 고소한 조합은 낮은 기압으로 인해 저하된 기분을 끌어올려 주는 효과가 있습니다. 막걸리를 곁들이면 몸이 따뜻해지며 감성적인 분위기를 완성시켜 줍니다.",
       {"image_path": "images/greenonionpancake.jpg"}
    ],
    '샌드위치': [
        "간편하지만 신선하게 한 끼를 해결하고 싶을 때!",
        "신선한 채소와 단백질, 탄수화물을 한 번에 섭취할 수 있어 영양 균형이 뛰어난 간편식입니다. 복잡한 조리 과정 없이 빠르게 만들 수 있어 시간을 절약해주고, 신선한 재료 덕분에 몸이 가볍고 상쾌해지는 효과를 느낄 수 있습니다. 바쁜 일상 속 활력을 불어넣기에 안성맞춤입니다.",
        {"image_path": "images/sandwiches.jpg"}
    ],
    '삼겹살': [
        "오늘 하루 고생한 나를 위해 제대로 된 보상이 필요할 때!",
        "지글지글 소리를 내며 노릇하게 구워 먹는 돼지고기 요리의 대표 주자입니다. 풍부한 지방과 단백질은 고된 노동으로 지친 몸에 빠르게 에너지를 공급하고, 맛있는 음식을 먹는다는 만족감 자체가 훌륭한 스트레스 해소제가 되어 줍니다. 여럿이 함께 구워 먹으며 유대감을 다지는 효과도 있습니다.",
        {"image_path": "images/porkbelly.jpg"}
    ],
    '짜장면': [
        "빠르고 맛있게! 특별한 날이 아니어도 특별한 기분을 내고 싶을 때!",
        "달콤 짭짤한 춘장 소스를 쫄깃한 면발에 비벼 먹는 한국식 중화요리입니다. 주 재료인 밀가루와 소스의 당분은 체내에 빠르게 흡수되어 즉각적인 에너지와 만족감을 줍니다. 우울하거나 기운이 없을 때, 어린 시절의 좋은 기억을 떠올리게 하며 기분 전환에 도움을 주는 효과가 있습니다.",
       {"image_path": "images/Jjajangmyeon.jpg"}
    ],
    '라면': [
        "세상에서 가장 간편하고 맛있는 한 끼가 필요할 때!",
        "꼬들꼬들한 면발과 얼큰한 국물로 빠르고 간단하게 허기를 채울 수 있는 최고의 인스턴트 소울푸드입니다. 뜨끈한 국물은 속을 데워 안정감을 주고, 탄수화물은 빠르게 에너지를 보충해 줍니다. 복잡하게 생각하고 싶지 않을 때, 최소한의 노력으로 최대의 만족감을 얻는 확실한 효과를 보장합니다.",
       {"image_path": "images/ramen.jpg"}
    ],
    '치킨': [
        "오늘 밤, 축하할 일이 있거나 그냥 맛있는 게 먹고 싶을 때!",
        "바삭한 튀김옷과 촉촉한 속살을 자랑하는, 명실상부 야식의 황제입니다. '맛있다'고 느끼게 하는 지방과 단백질의 조합은 뇌의 쾌락 중추를 자극해 행복감을 느끼게 합니다. 축하하는 자리, 위로가 필요한 순간 등 어떤 상황에서도 분위기를 즐겁게 만들어주는 강력한 효과가 있습니다.",
        {"image_path": "images/chicken.jpg"}
    ],
    '피자': [
        "친구들과 함께 모여 즐거운 시간을 보내고 싶을 때!",
        "다양한 토핑과 고소한 치즈가 어우러진, 함께 나눠 먹을 때 더 맛있는 음식입니다. 여러 조각으로 나뉘어 있어 자연스럽게 대화를 유도하고 파티 분위기를 만들어 줍니다. 탄수화물과 지방이 풍부하여 즐거운 자리에서 기분을 한껏 들뜨게 만드는 효과를 발휘합니다.",
        {"image_path": "images/pizza.jpg"}
    ],
    '마라탕': [
        "얼얼하고 자극적인 맛으로 스트레스를 날려버리고 싶을 때!",
        "혀를 마비시키는 '마라'의 얼얼함과 강렬한 매운맛이 특징인 중국식 탕 요리입니다. 이 강력하고 새로운 미각적 자극은 다른 복잡한 생각들을 잠시 잊게 만드는 효과가 있습니다. 원하는 재료를 직접 고르는 재미와 함께 땀 흘리며 먹고 나면, 스트레스가 해소되고 개운한 기분을 느낄 수 있습니다.",
        {"image_path": "images/Malatang.jpg"}
    ]
}

# --- 2. 사용자 인터페이스(UI) 구성 ---

st.title("🍽️ 오늘의 메뉴 추천")
st.write("간단한 질문에 답하고 오늘의 메뉴를 추천받아 보세요!")

with st.form("survey_form"):
    q1 = st.radio("오늘 날씨는 어떤가요?", ('맑음', '흐림', '비/눈'), key='q1')
    q2 = st.radio("지금 기분은 어떤가요?", ('최고예요!', '그냥 그래요', '조금 지쳐요'), key='q2')
    q3 = st.radio("매운 음식이 당기시나요?", ('네', '아니오'), key='q3')
    q4 = st.radio("따뜻한 국물이 필요한가요?", ('네', '아니오'), key='q4')
    q5 = st.radio("빠르게 먹을 수 있는 음식이 좋은가요?", ('네', '아니오'), key='q5')
    q6 = st.radio("든든한 식사를 원하시나요?", ('네', '아니오'), key='q6')
    submitted = st.form_submit_button("결과 확인하기")

# --- 3. 추천 로직 및 결과 출력 ---

if submitted:
    candidate_menus = []
    if q1 == '비/눈':
        candidate_menus.append('파전')
    if q2 == '최고예요!':
        candidate_menus.extend(['치킨', '피자'])
    elif q2 == '조금 지쳐요':
        candidate_menus.extend(['삼겹살', '김치찌개', '떡볶이', '마라탕'])
    if q3 == '네':
        candidate_menus.extend(['떡볶이', '김치찌개', '마라탕', '라면'])
    if q4 == '네':
        candidate_menus.extend(['김치찌개', '된장찌개', '라면', '마라탕'])
    if q5 == '네':
        candidate_menus.extend(['샌드위치', '짜장면', '떡볶이', '라면'])
    if q6 == '네':
        candidate_menus.extend(['삼겹살', '김치찌개', '된장찌개', '짜장면', '치킨', '피자'])

    if not candidate_menus:
        final_choice = random.choice(list(menus.keys()))
    else:
        final_choice = max(set(candidate_menus), key=candidate_menus.count)
    
    st.session_state['result'] = final_choice

# session_state에 저장된 결과가 있으면 화면에 표시
if st.session_state['result']:
    st.divider()

    result_menu = st.session_state['result']
    
    # 데이터 Unpacking
    reason = menus[result_menu][0]
    description = menus[result_menu][1]
    image_url = menus[result_menu][2]["image_path"]

    st.success(f"오늘 당신에게 추천하는 메뉴는 **'{result_menu}'** 입니다!")
    
    st.image(image_url, caption=f"오늘의 추천 메뉴: {result_menu}")
    
    st.write(f"**추천 이유:** {reason}")
    st.info(f"**음식 설명:** {description}")